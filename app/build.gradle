/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // The Checkstyle plugin performs quality checks on your projectâ€™s Java source files using Checkstyle and
    // generates reports from these checks.
    id 'checkstyle'

    // Formatting codes
    id 'com.diffplug.spotless' version '6.25.0'

    // Spring Batch related plugins
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // Spring Batch related dependencies
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'

    implementation 'org.hsqldb:hsqldb'
    implementation 'jakarta.persistence:jakarta.persistence-api'
    implementation 'org.apache.commons:commons-dbcp2'
    implementation 'org.springframework:spring-orm'
    implementation 'org.hibernate:hibernate-core:6.6.2.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation 'commons-io:commons-io:2.17.0'
}

checkstyle {
    toolVersion = '10.20.1'
    // Directly copied from: https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml
    configFile = file('./config/checkstyle/checkstyle.xml')
}

// Directly copied from: https://github.com/diffplug/spotless/tree/main/plugin-gradle#java
spotless {
    java {
        // Use the default importOrder configuration
        importOrder()
        // optional: you can specify import groups directly
        // note: you can use an empty string for all the imports you didn't specify explicitly, '|' to join group without blank line, and '\\#` prefix for static imports
        // importOrder('java|javax', 'com.acme', '', '\\#com.acme', '\\#')
        // optional: instead of specifying import groups directly you can specify a config file
        // export config file: https://github.com/diffplug/spotless/blob/main/ECLIPSE_SCREENSHOTS.md#creating-spotlessimportorder
        // importOrderFile('eclipse-import-order.txt') // import order file as exported from eclipse

        removeUnusedImports()

        // Cleanthat will refactor your code, but it may break your style: apply it before your formatter
        cleanthat()

        googleJavaFormat()

        formatAnnotations()  // fixes formatting of type annotations

        // licenseHeader '/* (C) $YEAR */' // or licenseHeaderFile
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.github.khshourov.batchpractices.BatchProcessingApplication'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    systemProperty "spring.profiles.active", "test"
}
